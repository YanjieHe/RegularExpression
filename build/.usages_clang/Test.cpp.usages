22 serialization::archive 16 0 0 0 0 59 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression 65 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/build 0 0 1036 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 10 "Test.hpp" 1 10 1 20 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 9 "NFA.hpp" 2 10 2 19 18446744073709551615 5 using 3 1 3 6 18446744073709551615 9 namespace 3 7 3 16 18446744073709551615 2 RE 3 17 3 19 0 1 ; 3 19 3 20 18446744073709551615 4 void 4 1 4 5 18446744073709551615 9 ShowGraph 4 6 4 15 1 1 ( 4 15 4 16 1 8 NFAGraph 4 16 4 24 2 1 & 4 24 4 25 18446744073709551615 1 G 4 26 4 27 3 1 , 4 27 4 28 1 3 int 4 29 4 32 18446744073709551615 4 node 4 33 4 37 4 1 , 4 37 4 38 1 6 vector 4 39 4 45 5 1 < 4 45 4 46 18446744073709551615 4 bool 4 46 4 50 18446744073709551615 1 > 4 50 4 51 18446744073709551615 1 & 4 51 4 52 18446744073709551615 7 visited 4 53 4 60 6 1 ) 4 60 4 61 1 1 { 5 1 5 2 18446744073709551615 2 if 6 2 6 4 18446744073709551615 1 ( 6 5 6 6 18446744073709551615 7 visited 6 6 6 13 6 1 . 6 13 6 14 7 2 at 6 14 6 16 7 1 ( 6 16 6 17 7 4 node 6 17 6 21 4 1 ) 6 21 6 22 7 1 ) 6 22 6 23 18446744073709551615 1 { 7 2 7 3 18446744073709551615 6 return 8 3 8 9 18446744073709551615 1 ; 8 9 8 10 18446744073709551615 1 } 9 2 9 3 18446744073709551615 4 else 10 2 10 6 18446744073709551615 1 { 11 2 11 3 18446744073709551615 5 wcout 12 3 12 8 8 2 << 12 9 12 11 9 4 node 12 12 12 16 4 2 << 12 17 12 19 10 5 L": " 12 20 12 25 18446744073709551615 1 ; 12 25 12 26 18446744073709551615 3 for 13 3 13 6 18446744073709551615 1 ( 13 7 13 8 18446744073709551615 4 auto 13 8 13 12 18446744073709551615 1 & 13 12 13 13 18446744073709551615 4 edge 13 14 13 18 11 1 : 13 19 13 20 12 1 G 13 21 13 22 3 1 . 13 22 13 23 18446744073709551615 3 adj 13 23 13 26 13 1 . 13 26 13 27 7 2 at 13 27 13 29 7 1 ( 13 29 13 30 7 4 node 13 30 13 34 4 1 ) 13 34 13 35 7 1 ) 13 35 13 36 18446744073709551615 1 { 14 3 14 4 18446744073709551615 7 wchar_t 15 4 15 11 18446744073709551615 9 character 15 12 15 21 14 1 = 15 22 15 23 18446744073709551615 4 edge 15 24 15 28 11 1 . 15 28 15 29 18446744073709551615 7 pattern 15 29 15 36 15 2 == 15 37 15 39 18446744073709551615 1 - 15 40 15 41 18446744073709551615 1 1 15 41 15 42 18446744073709551615 1 ? 15 43 15 44 18446744073709551615 5 L'ε' 15 45 15 50 18446744073709551615 1 : 15 51 15 52 18446744073709551615 4 edge 15 53 15 57 11 1 . 15 57 15 58 18446744073709551615 7 pattern 15 58 15 65 15 1 ; 15 65 15 66 18446744073709551615 5 wcout 16 4 16 9 8 2 << 16 10 16 12 9 4 edge 16 13 16 17 11 1 . 16 17 16 18 18446744073709551615 2 to 16 18 16 20 16 2 << 16 21 16 23 10 4 L"(" 16 24 16 28 18446744073709551615 2 << 16 29 16 31 10 9 character 16 32 16 41 14 2 << 16 42 16 44 10 4 L")" 16 45 16 49 18446744073709551615 2 << 16 50 16 52 10 4 L" " 16 53 16 57 18446744073709551615 1 ; 16 57 16 58 18446744073709551615 1 } 17 3 17 4 18446744073709551615 5 wcout 18 3 18 8 8 2 << 18 9 18 11 9 4 endl 18 12 18 16 17 1 ; 18 16 18 17 18446744073709551615 7 visited 19 3 19 10 6 1 . 19 10 19 11 7 2 at 19 11 19 13 7 1 ( 19 13 19 14 7 4 node 19 14 19 18 4 1 ) 19 18 19 19 7 1 = 19 20 19 21 18 4 true 19 22 19 26 18446744073709551615 1 ; 19 26 19 27 18446744073709551615 3 for 20 3 20 6 18446744073709551615 1 ( 20 7 20 8 18446744073709551615 4 auto 20 8 20 12 18446744073709551615 1 & 20 12 20 13 18446744073709551615 4 edge 20 14 20 18 19 1 : 20 19 20 20 12 1 G 20 21 20 22 3 1 . 20 22 20 23 18446744073709551615 3 adj 20 23 20 26 13 1 . 20 26 20 27 7 2 at 20 27 20 29 7 1 ( 20 29 20 30 7 4 node 20 30 20 34 4 1 ) 20 34 20 35 7 1 ) 20 35 20 36 18446744073709551615 1 { 21 3 21 4 18446744073709551615 9 ShowGraph 22 4 22 13 1 1 ( 22 13 22 14 1 1 G 22 14 22 15 3 1 , 22 15 22 16 1 4 edge 22 17 22 21 19 1 . 22 21 22 22 18446744073709551615 2 to 22 22 22 24 16 1 , 22 24 22 25 1 7 visited 22 26 22 33 6 1 ) 22 33 22 34 1 1 ; 22 34 22 35 18446744073709551615 1 } 23 3 23 4 18446744073709551615 1 } 24 2 24 3 18446744073709551615 1 } 25 1 25 2 18446744073709551615 4 void 26 1 26 5 18446744073709551615 9 DrawGraph 26 6 26 15 20 1 ( 26 15 26 16 20 8 NFAGraph 26 16 26 24 2 1 & 26 24 26 25 18446744073709551615 1 G 26 26 26 27 21 1 , 26 27 26 28 20 3 int 26 29 26 32 18446744073709551615 4 node 26 33 26 37 22 1 , 26 37 26 38 20 6 vector 26 39 26 45 5 1 < 26 45 26 46 18446744073709551615 4 bool 26 46 26 50 18446744073709551615 1 > 26 50 26 51 18446744073709551615 1 & 26 51 26 52 18446744073709551615 7 visited 26 53 26 60 23 1 ) 26 60 26 61 20 1 { 27 1 27 2 18446744073709551615 2 if 28 2 28 4 18446744073709551615 1 ( 28 5 28 6 18446744073709551615 7 visited 28 6 28 13 23 1 . 28 13 28 14 7 2 at 28 14 28 16 7 1 ( 28 16 28 17 7 4 node 28 17 28 21 22 1 ) 28 21 28 22 7 1 ) 28 22 28 23 18446744073709551615 1 { 29 2 29 3 18446744073709551615 6 return 30 3 30 9 18446744073709551615 1 ; 30 9 30 10 18446744073709551615 1 } 31 2 31 3 18446744073709551615 4 else 32 2 32 6 18446744073709551615 1 { 33 2 33 3 18446744073709551615 3 for 34 3 34 6 18446744073709551615 1 ( 34 7 34 8 18446744073709551615 4 auto 34 8 34 12 18446744073709551615 1 & 34 12 34 13 18446744073709551615 4 edge 34 14 34 18 24 1 : 34 19 34 20 12 1 G 34 21 34 22 21 1 . 34 22 34 23 18446744073709551615 3 adj 34 23 34 26 13 1 . 34 26 34 27 7 2 at 34 27 34 29 7 1 ( 34 29 34 30 7 4 node 34 30 34 34 22 1 ) 34 34 34 35 7 1 ) 34 35 34 36 18446744073709551615 1 { 35 3 35 4 18446744073709551615 7 wchar_t 36 4 36 11 18446744073709551615 9 character 36 12 36 21 25 1 = 36 22 36 23 18446744073709551615 4 edge 36 24 36 28 24 1 . 36 28 36 29 18446744073709551615 7 pattern 36 29 36 36 15 2 == 36 37 36 39 18446744073709551615 1 - 36 40 36 41 18446744073709551615 1 1 36 41 36 42 18446744073709551615 1 ? 36 43 36 44 18446744073709551615 5 L'ε' 36 45 36 50 18446744073709551615 1 : 36 51 36 52 18446744073709551615 4 edge 36 53 36 57 24 1 . 36 57 36 58 18446744073709551615 7 pattern 36 58 36 65 15 1 ; 36 65 36 66 18446744073709551615 5 wcout 37 4 37 9 8 2 << 37 10 37 12 9 4 edge 37 13 37 17 24 1 . 37 17 37 18 18446744073709551615 4 from 37 18 37 22 26 2 << 37 23 37 25 10 7 L" -> " 37 26 37 33 18446744073709551615 2 << 37 34 37 36 9 4 edge 37 37 37 41 24 1 . 37 41 37 42 18446744073709551615 2 to 37 42 37 44 16 2 << 37 45 37 47 10 16 L" [ label = \"" 37 48 37 64 18446744073709551615 2 << 38 7 38 9 10 9 character 38 10 38 19 25 2 << 38 20 38 22 10 8 L"\" ];" 38 23 38 31 18446744073709551615 2 << 38 32 38 34 9 4 endl 38 35 38 39 17 1 ; 38 39 38 40 18446744073709551615 1 } 39 3 39 4 18446744073709551615 7 visited 40 3 40 10 23 1 . 40 10 40 11 7 2 at 40 11 40 13 7 1 ( 40 13 40 14 7 4 node 40 14 40 18 22 1 ) 40 18 40 19 7 1 = 40 20 40 21 18 4 true 40 22 40 26 18446744073709551615 1 ; 40 26 40 27 18446744073709551615 3 for 41 3 41 6 18446744073709551615 1 ( 41 7 41 8 18446744073709551615 4 auto 41 8 41 12 18446744073709551615 1 & 41 12 41 13 18446744073709551615 4 edge 41 14 41 18 27 1 : 41 19 41 20 12 1 G 41 21 41 22 21 1 . 41 22 41 23 18446744073709551615 3 adj 41 23 41 26 13 1 . 41 26 41 27 7 2 at 41 27 41 29 7 1 ( 41 29 41 30 7 4 node 41 30 41 34 22 1 ) 41 34 41 35 7 1 ) 41 35 41 36 18446744073709551615 1 { 42 3 42 4 18446744073709551615 9 DrawGraph 43 4 43 13 20 1 ( 43 13 43 14 20 1 G 43 14 43 15 21 1 , 43 15 43 16 20 4 edge 43 17 43 21 27 1 . 43 21 43 22 18446744073709551615 2 to 43 22 43 24 16 1 , 43 24 43 25 20 7 visited 43 26 43 33 23 1 ) 43 33 43 34 20 1 ; 43 34 43 35 18446744073709551615 1 } 44 3 44 4 18446744073709551615 1 } 45 2 45 3 18446744073709551615 1 } 46 1 46 2 18446744073709551615 4 void 47 1 47 5 18446744073709551615 5 Test1 47 6 47 11 28 1 ( 47 11 47 12 28 1 ) 47 12 47 13 28 1 { 48 1 48 2 18446744073709551615 13 RegularExpPtr 49 2 49 15 29 2 re 49 16 49 18 30 1 = 49 19 49 20 18446744073709551615 11 make_shared 49 21 49 32 31 1 < 49 32 49 33 31 23 ConcatenationExpression 49 33 49 56 32 1 > 49 56 49 57 31 1 ( 49 57 49 58 31 11 make_shared 50 3 50 14 31 1 < 50 14 50 15 31 16 SymbolExpression 50 15 50 31 33 1 > 50 31 50 32 31 1 ( 50 32 50 33 31 4 L'a' 50 33 50 37 18446744073709551615 1 ) 50 37 50 38 31 1 , 50 38 50 39 31 11 make_shared 51 3 51 14 31 1 < 51 14 51 15 31 16 SymbolExpression 51 15 51 31 33 1 > 51 31 51 32 31 1 ( 51 32 51 33 31 4 L'b' 51 33 51 37 18446744073709551615 1 ) 51 37 51 38 31 1 ) 51 38 51 39 31 1 ; 51 39 51 40 18446744073709551615 3 NFA 52 2 52 5 34 3 nfa 52 6 52 9 35 1 ; 52 9 52 10 18446744073709551615 11 NFASubgraph 53 2 53 13 36 8 subgraph 53 14 53 22 37 1 = 53 23 53 24 18446744073709551615 3 nfa 53 25 53 28 35 1 . 53 28 53 29 38 7 Convert 53 29 53 36 38 1 ( 53 36 53 37 38 2 re 53 37 53 39 30 1 ) 53 39 53 40 38 1 ; 53 40 53 41 18446744073709551615 6 vector 54 2 54 8 5 1 < 54 8 54 9 18446744073709551615 4 bool 54 9 54 13 18446744073709551615 1 > 54 13 54 14 18446744073709551615 7 visited 54 15 54 22 39 1 ( 54 22 54 23 5 3 nfa 54 23 54 26 35 1 . 54 26 54 27 18446744073709551615 1 G 54 27 54 28 40 1 . 54 28 54 29 41 9 NodeCount 54 29 54 38 41 1 ( 54 38 54 39 41 1 ) 54 39 54 40 41 1 ) 54 40 54 41 5 1 ; 54 41 54 42 18446744073709551615 3 for 55 2 55 5 18446744073709551615 1 ( 55 6 55 7 18446744073709551615 3 int 55 7 55 10 18446744073709551615 1 i 55 11 55 12 42 1 = 55 13 55 14 18446744073709551615 1 0 55 15 55 16 18446744073709551615 1 , 55 16 55 17 18446744073709551615 1 n 55 18 55 19 43 1 = 55 20 55 21 18446744073709551615 7 visited 55 22 55 29 39 1 . 55 29 55 30 44 4 size 55 30 55 34 44 1 ( 55 34 55 35 44 1 ) 55 35 55 36 44 1 ; 55 36 55 37 18446744073709551615 1 i 55 38 55 39 42 1 < 55 40 55 41 18446744073709551615 1 n 55 42 55 43 43 1 ; 55 43 55 44 18446744073709551615 1 i 55 45 55 46 42 2 ++ 55 46 55 48 18446744073709551615 1 ) 55 48 55 49 18446744073709551615 1 { 56 2 56 3 18446744073709551615 7 visited 57 3 57 10 39 1 [ 57 10 57 11 45 1 i 57 11 57 12 42 1 ] 57 12 57 13 45 1 = 57 14 57 15 18 5 false 57 16 57 21 18446744073709551615 1 ; 57 21 57 22 18446744073709551615 1 } 58 2 58 3 18446744073709551615 9 DrawGraph 59 2 59 11 20 1 ( 59 11 59 12 20 3 nfa 59 12 59 15 35 1 . 59 15 59 16 18446744073709551615 1 G 59 16 59 17 40 1 , 59 17 59 18 20 8 subgraph 59 19 59 27 37 1 . 59 27 59 28 18446744073709551615 5 start 59 28 59 33 46 1 , 59 33 59 34 20 7 visited 59 35 59 42 39 1 ) 59 42 59 43 20 1 ; 59 43 59 44 18446744073709551615 1 } 60 1 60 2 18446744073709551615 4 void 61 1 61 5 18446744073709551615 5 Test2 61 6 61 11 47 1 ( 61 11 61 12 47 1 ) 61 12 61 13 47 1 { 62 1 62 2 18446744073709551615 13 RegularExpPtr 63 2 63 15 29 2 re 63 16 63 18 48 1 = 63 19 63 20 18446744073709551615 11 make_shared 63 21 63 32 31 1 < 63 32 63 33 31 21 AlternationExpression 63 33 63 54 49 1 > 63 54 63 55 31 1 ( 63 55 63 56 31 11 make_shared 64 3 64 14 31 1 < 64 14 64 15 31 23 ConcatenationExpression 64 15 64 38 32 1 > 64 38 64 39 31 1 ( 64 39 64 40 31 11 make_shared 65 4 65 15 31 1 < 65 15 65 16 31 16 SymbolExpression 65 16 65 32 33 1 > 65 32 65 33 31 1 ( 65 33 65 34 31 4 L'a' 65 34 65 38 18446744073709551615 1 ) 65 38 65 39 31 1 , 65 39 65 40 31 11 make_shared 66 4 66 15 31 1 < 66 15 66 16 31 16 SymbolExpression 66 16 66 32 33 1 > 66 32 66 33 31 1 ( 66 33 66 34 31 4 L'b' 66 34 66 38 18446744073709551615 1 ) 66 38 66 39 31 1 ) 66 39 66 40 31 1 , 66 40 66 41 31 11 make_shared 67 3 67 14 31 1 < 67 14 67 15 31 23 ConcatenationExpression 67 15 67 38 32 1 > 67 38 67 39 31 1 ( 67 39 67 40 31 11 make_shared 68 4 68 15 31 1 < 68 15 68 16 31 16 SymbolExpression 68 16 68 32 33 1 > 68 32 68 33 31 1 ( 68 33 68 34 31 4 L'c' 68 34 68 38 18446744073709551615 1 ) 68 38 68 39 31 1 , 68 39 68 40 31 11 make_shared 69 4 69 15 31 1 < 69 15 69 16 31 16 SymbolExpression 69 16 69 32 33 1 > 69 32 69 33 31 1 ( 69 33 69 34 31 4 L'd' 69 34 69 38 18446744073709551615 1 ) 69 38 69 39 31 1 ) 69 39 69 40 31 1 ) 69 40 69 41 31 1 ; 69 41 69 42 18446744073709551615 3 NFA 70 2 70 5 34 3 nfa 70 6 70 9 50 1 ; 70 9 70 10 18446744073709551615 11 NFASubgraph 71 2 71 13 36 8 subgraph 71 14 71 22 51 1 = 71 23 71 24 18446744073709551615 3 nfa 71 25 71 28 50 1 . 71 28 71 29 38 7 Convert 71 29 71 36 38 1 ( 71 36 71 37 38 2 re 71 37 71 39 48 1 ) 71 39 71 40 38 1 ; 71 40 71 41 18446744073709551615 6 vector 72 2 72 8 5 1 < 72 8 72 9 18446744073709551615 4 bool 72 9 72 13 18446744073709551615 1 > 72 13 72 14 18446744073709551615 7 visited 72 15 72 22 52 1 ( 72 22 72 23 5 3 nfa 72 23 72 26 50 1 . 72 26 72 27 18446744073709551615 1 G 72 27 72 28 40 1 . 72 28 72 29 41 9 NodeCount 72 29 72 38 41 1 ( 72 38 72 39 41 1 ) 72 39 72 40 41 1 ) 72 40 72 41 5 1 ; 72 41 72 42 18446744073709551615 3 for 73 2 73 5 18446744073709551615 1 ( 73 6 73 7 18446744073709551615 3 int 73 7 73 10 18446744073709551615 1 i 73 11 73 12 53 1 = 73 13 73 14 18446744073709551615 1 0 73 15 73 16 18446744073709551615 1 , 73 16 73 17 18446744073709551615 1 n 73 18 73 19 54 1 = 73 20 73 21 18446744073709551615 7 visited 73 22 73 29 52 1 . 73 29 73 30 44 4 size 73 30 73 34 44 1 ( 73 34 73 35 44 1 ) 73 35 73 36 44 1 ; 73 36 73 37 18446744073709551615 1 i 73 38 73 39 53 1 < 73 40 73 41 18446744073709551615 1 n 73 42 73 43 54 1 ; 73 43 73 44 18446744073709551615 1 i 73 45 73 46 53 2 ++ 73 46 73 48 18446744073709551615 1 ) 73 48 73 49 18446744073709551615 1 { 74 2 74 3 18446744073709551615 7 visited 75 3 75 10 52 1 [ 75 10 75 11 45 1 i 75 11 75 12 53 1 ] 75 12 75 13 45 1 = 75 14 75 15 18 5 false 75 16 75 21 18446744073709551615 1 ; 75 21 75 22 18446744073709551615 1 } 76 2 76 3 18446744073709551615 9 DrawGraph 77 2 77 11 20 1 ( 77 11 77 12 20 3 nfa 77 12 77 15 50 1 . 77 15 77 16 18446744073709551615 1 G 77 16 77 17 40 1 , 77 17 77 18 20 8 subgraph 77 19 77 27 51 1 . 77 27 77 28 18446744073709551615 5 start 77 28 77 33 46 1 , 77 33 77 34 20 7 visited 77 35 77 42 52 1 ) 77 42 77 43 20 1 ; 77 43 77 44 18446744073709551615 1 } 78 1 78 2 18446744073709551615 4 void 79 1 79 5 18446744073709551615 5 Test3 79 6 79 11 55 1 ( 79 11 79 12 55 1 ) 79 12 79 13 55 1 { 80 1 80 2 18446744073709551615 13 RegularExpPtr 81 2 81 15 29 2 re 81 16 81 18 56 1 = 81 19 81 20 18446744073709551615 11 make_shared 81 21 81 32 31 1 < 81 32 81 33 31 23 ConcatenationExpression 81 33 81 56 32 1 > 81 56 81 57 31 1 ( 81 57 81 58 31 11 make_shared 82 3 82 14 31 1 < 82 14 82 15 31 20 KleeneStarExpression 82 15 82 35 57 1 > 82 35 82 36 31 1 ( 82 36 82 37 31 11 make_shared 82 37 82 48 31 1 < 82 48 82 49 31 21 AlternationExpression 82 49 82 70 49 1 > 82 70 82 71 31 1 ( 82 71 82 72 31 11 make_shared 83 4 83 15 31 1 < 83 15 83 16 31 16 SymbolExpression 83 16 83 32 33 1 > 83 32 83 33 31 1 ( 83 33 83 34 31 4 L'a' 83 34 83 38 18446744073709551615 1 ) 83 38 83 39 31 1 , 83 39 83 40 31 11 make_shared 84 4 84 15 31 1 < 84 15 84 16 31 16 SymbolExpression 84 16 84 32 33 1 > 84 32 84 33 31 1 ( 84 33 84 34 31 4 L'b' 84 34 84 38 18446744073709551615 1 ) 84 38 84 39 31 1 ) 84 39 84 40 31 1 ) 84 40 84 41 31 1 , 84 41 84 42 31 11 make_shared 85 3 85 14 31 1 < 85 14 85 15 31 23 ConcatenationExpression 85 15 85 38 32 1 > 85 38 85 39 31 1 ( 85 39 85 40 31 11 make_shared 86 4 86 15 31 1 < 86 15 86 16 31 16 SymbolExpression 86 16 86 32 33 1 > 86 32 86 33 31 1 ( 86 33 86 34 31 4 L'a' 86 34 86 38 18446744073709551615 1 ) 86 38 86 39 31 1 , 86 39 86 40 31 11 make_shared 87 4 87 15 31 1 < 87 15 87 16 31 23 ConcatenationExpression 87 16 87 39 32 1 > 87 39 87 40 31 1 ( 87 40 87 41 31 11 make_shared 88 5 88 16 31 1 < 88 16 88 17 31 16 SymbolExpression 88 17 88 33 33 1 > 88 33 88 34 31 1 ( 88 34 88 35 31 4 L'b' 88 35 88 39 18446744073709551615 1 ) 88 39 88 40 31 1 , 88 40 88 41 31 11 make_shared 89 5 89 16 31 1 < 89 16 89 17 31 16 SymbolExpression 89 17 89 33 33 1 > 89 33 89 34 31 1 ( 89 34 89 35 31 4 L'b' 89 35 89 39 18446744073709551615 1 ) 89 39 89 40 31 1 ) 89 40 89 41 31 1 ) 89 41 89 42 31 1 ) 89 42 89 43 31 1 ; 89 43 89 44 18446744073709551615 3 NFA 90 2 90 5 34 3 nfa 90 6 90 9 58 1 ; 90 9 90 10 18446744073709551615 11 NFASubgraph 91 2 91 13 36 8 subgraph 91 14 91 22 59 1 = 91 23 91 24 18446744073709551615 3 nfa 91 25 91 28 58 1 . 91 28 91 29 38 7 Convert 91 29 91 36 38 1 ( 91 36 91 37 38 2 re 91 37 91 39 56 1 ) 91 39 91 40 38 1 ; 91 40 91 41 18446744073709551615 6 vector 92 2 92 8 5 1 < 92 8 92 9 18446744073709551615 4 bool 92 9 92 13 18446744073709551615 1 > 92 13 92 14 18446744073709551615 7 visited 92 15 92 22 60 1 ( 92 22 92 23 5 3 nfa 92 23 92 26 58 1 . 92 26 92 27 18446744073709551615 1 G 92 27 92 28 40 1 . 92 28 92 29 41 9 NodeCount 92 29 92 38 41 1 ( 92 38 92 39 41 1 ) 92 39 92 40 41 1 ) 92 40 92 41 5 1 ; 92 41 92 42 18446744073709551615 3 for 93 2 93 5 18446744073709551615 1 ( 93 6 93 7 18446744073709551615 3 int 93 7 93 10 18446744073709551615 1 i 93 11 93 12 61 1 = 93 13 93 14 18446744073709551615 1 0 93 15 93 16 18446744073709551615 1 , 93 16 93 17 18446744073709551615 1 n 93 18 93 19 62 1 = 93 20 93 21 18446744073709551615 7 visited 93 22 93 29 60 1 . 93 29 93 30 44 4 size 93 30 93 34 44 1 ( 93 34 93 35 44 1 ) 93 35 93 36 44 1 ; 93 36 93 37 18446744073709551615 1 i 93 38 93 39 61 1 < 93 40 93 41 18446744073709551615 1 n 93 42 93 43 62 1 ; 93 43 93 44 18446744073709551615 1 i 93 45 93 46 61 2 ++ 93 46 93 48 18446744073709551615 1 ) 93 48 93 49 18446744073709551615 1 { 94 2 94 3 18446744073709551615 7 visited 95 3 95 10 60 1 [ 95 10 95 11 45 1 i 95 11 95 12 61 1 ] 95 12 95 13 45 1 = 95 14 95 15 18 5 false 95 16 95 21 18446744073709551615 1 ; 95 21 95 22 18446744073709551615 1 } 96 2 96 3 18446744073709551615 9 DrawGraph 97 2 97 11 20 1 ( 97 11 97 12 20 3 nfa 97 12 97 15 58 1 . 97 15 97 16 18446744073709551615 1 G 97 16 97 17 40 1 , 97 17 97 18 20 8 subgraph 97 19 97 27 59 1 . 97 27 97 28 18446744073709551615 5 start 97 28 97 33 46 1 , 97 33 97 34 20 7 visited 97 35 97 42 60 1 ) 97 42 97 43 20 1 ; 97 43 97 44 18446744073709551615 1 } 98 1 98 2 18446744073709551615 4 void 99 1 99 5 18446744073709551615 5 Test4 99 6 99 11 63 1 ( 99 11 99 12 63 1 ) 99 12 99 13 63 1 { 100 1 100 2 18446744073709551615 13 RegularExpPtr 101 2 101 15 29 2 re 101 16 101 18 64 1 = 101 19 101 20 18446744073709551615 11 make_shared 101 21 101 32 31 1 < 101 32 101 33 31 23 ConcatenationExpression 101 33 101 56 32 1 > 101 56 101 57 31 1 ( 101 57 101 58 31 11 make_shared 102 3 102 14 31 1 < 102 14 102 15 31 20 KleeneStarExpression 102 15 102 35 57 1 > 102 35 102 36 31 1 ( 102 36 102 37 31 11 make_shared 102 37 102 48 31 1 < 102 48 102 49 31 21 AlternationExpression 102 49 102 70 49 1 > 102 70 102 71 31 1 ( 102 71 102 72 31 11 make_shared 103 4 103 15 31 1 < 103 15 103 16 31 16 SymbolExpression 103 16 103 32 33 1 > 103 32 103 33 31 1 ( 103 33 103 34 31 4 L'a' 103 34 103 38 18446744073709551615 1 ) 103 38 103 39 31 1 , 103 39 103 40 31 11 make_shared 104 4 104 15 31 1 < 104 15 104 16 31 16 SymbolExpression 104 16 104 32 33 1 > 104 32 104 33 31 1 ( 104 33 104 34 31 4 L'b' 104 34 104 38 18446744073709551615 1 ) 104 38 104 39 31 1 ) 104 39 104 40 31 1 ) 104 40 104 41 31 1 , 104 41 104 42 31 11 make_shared 105 3 105 14 31 1 < 105 14 105 15 31 16 SymbolExpression 105 15 105 31 33 1 > 105 31 105 32 31 1 ( 105 32 105 33 31 4 L'a' 105 33 105 37 18446744073709551615 1 ) 105 37 105 38 31 1 ) 105 38 105 39 31 1 ; 105 39 105 40 18446744073709551615 3 NFA 106 2 106 5 34 3 nfa 106 6 106 9 65 1 ; 106 9 106 10 18446744073709551615 11 NFASubgraph 107 2 107 13 36 8 subgraph 107 14 107 22 66 1 = 107 23 107 24 18446744073709551615 3 nfa 107 25 107 28 65 1 . 107 28 107 29 38 7 Convert 107 29 107 36 38 1 ( 107 36 107 37 38 2 re 107 37 107 39 64 1 ) 107 39 107 40 38 1 ; 107 40 107 41 18446744073709551615 6 vector 108 2 108 8 5 1 < 108 8 108 9 18446744073709551615 4 bool 108 9 108 13 18446744073709551615 1 > 108 13 108 14 18446744073709551615 7 visited 108 15 108 22 67 1 ( 108 22 108 23 5 3 nfa 108 23 108 26 65 1 . 108 26 108 27 18446744073709551615 1 G 108 27 108 28 40 1 . 108 28 108 29 41 9 NodeCount 108 29 108 38 41 1 ( 108 38 108 39 41 1 ) 108 39 108 40 41 1 ) 108 40 108 41 5 1 ; 108 41 108 42 18446744073709551615 3 for 109 2 109 5 18446744073709551615 1 ( 109 6 109 7 18446744073709551615 3 int 109 7 109 10 18446744073709551615 1 i 109 11 109 12 68 1 = 109 13 109 14 18446744073709551615 1 0 109 15 109 16 18446744073709551615 1 , 109 16 109 17 18446744073709551615 1 n 109 18 109 19 69 1 = 109 20 109 21 18446744073709551615 7 visited 109 22 109 29 67 1 . 109 29 109 30 44 4 size 109 30 109 34 44 1 ( 109 34 109 35 44 1 ) 109 35 109 36 44 1 ; 109 36 109 37 18446744073709551615 1 i 109 38 109 39 68 1 < 109 40 109 41 18446744073709551615 1 n 109 42 109 43 69 1 ; 109 43 109 44 18446744073709551615 1 i 109 45 109 46 68 2 ++ 109 46 109 48 18446744073709551615 1 ) 109 48 109 49 18446744073709551615 1 { 110 2 110 3 18446744073709551615 7 visited 111 3 111 10 67 1 [ 111 10 111 11 45 1 i 111 11 111 12 68 1 ] 111 12 111 13 45 1 = 111 14 111 15 18 5 false 111 16 111 21 18446744073709551615 1 ; 111 21 111 22 18446744073709551615 1 } 112 2 112 3 18446744073709551615 5 wcout 113 2 113 7 8 2 << 113 8 113 10 10 11 L"start = " 113 11 113 22 18446744073709551615 2 << 113 23 113 25 9 8 subgraph 113 26 113 34 66 1 . 113 34 113 35 18446744073709551615 5 start 113 35 113 40 46 2 << 113 41 113 43 10 11 L", end = " 113 44 113 55 18446744073709551615 2 << 113 56 113 58 9 8 subgraph 113 59 113 67 66 1 . 113 67 113 68 18446744073709551615 3 end 113 68 113 71 70 2 << 114 5 114 7 9 4 endl 114 8 114 12 17 1 ; 114 12 114 13 18446744073709551615 9 DrawGraph 115 2 115 11 20 1 ( 115 11 115 12 20 3 nfa 115 12 115 15 65 1 . 115 15 115 16 18446744073709551615 1 G 115 16 115 17 40 1 , 115 17 115 18 20 8 subgraph 115 19 115 27 66 1 . 115 27 115 28 18446744073709551615 5 start 115 28 115 33 46 1 , 115 33 115 34 20 7 visited 115 35 115 42 67 1 ) 115 42 115 43 20 1 ; 115 43 115 44 18446744073709551615 1 } 116 1 116 2 18446744073709551615 4 void 117 1 117 5 18446744073709551615 5 Test5 117 6 117 11 71 1 ( 117 11 117 12 71 1 ) 117 12 117 13 71 1 { 118 1 118 2 18446744073709551615 5 wcout 119 2 119 7 8 2 << 119 8 119 10 10 7 "test5" 119 11 119 18 18446744073709551615 2 << 119 19 119 21 9 4 endl 119 22 119 26 17 1 ; 119 26 119 27 18446744073709551615 4 auto 121 2 121 6 18446744073709551615 2 re 121 7 121 9 72 1 = 121 10 121 11 18446744073709551615 2 RE 121 12 121 14 0 2 :: 121 14 121 16 73 7 Literal 121 16 121 23 73 1 ( 121 23 121 24 73 9 L"knight" 121 24 121 33 18446744073709551615 1 ) 121 33 121 34 73 1 ; 121 34 121 35 18446744073709551615 3 NFA 122 2 122 5 34 3 nfa 122 6 122 9 74 1 ; 122 9 122 10 18446744073709551615 11 NFASubgraph 123 2 123 13 36 8 subgraph 123 14 123 22 75 1 = 123 23 123 24 18446744073709551615 3 nfa 123 25 123 28 74 1 . 123 28 123 29 38 7 Convert 123 29 123 36 38 1 ( 123 36 123 37 38 2 re 123 37 123 39 72 1 ) 123 39 123 40 38 1 ; 123 40 123 41 18446744073709551615 6 vector 124 2 124 8 5 1 < 124 8 124 9 18446744073709551615 4 bool 124 9 124 13 18446744073709551615 1 > 124 13 124 14 18446744073709551615 7 visited 124 15 124 22 76 1 ( 124 22 124 23 5 3 nfa 124 23 124 26 74 1 . 124 26 124 27 18446744073709551615 1 G 124 27 124 28 40 1 . 124 28 124 29 41 9 NodeCount 124 29 124 38 41 1 ( 124 38 124 39 41 1 ) 124 39 124 40 41 1 ) 124 40 124 41 5 1 ; 124 41 124 42 18446744073709551615 3 for 125 2 125 5 18446744073709551615 1 ( 125 6 125 7 18446744073709551615 3 int 125 7 125 10 18446744073709551615 1 i 125 11 125 12 77 1 = 125 13 125 14 18446744073709551615 1 0 125 15 125 16 18446744073709551615 1 , 125 16 125 17 18446744073709551615 1 n 125 18 125 19 78 1 = 125 20 125 21 18446744073709551615 7 visited 125 22 125 29 76 1 . 125 29 125 30 44 4 size 125 30 125 34 44 1 ( 125 34 125 35 44 1 ) 125 35 125 36 44 1 ; 125 36 125 37 18446744073709551615 1 i 125 38 125 39 77 1 < 125 40 125 41 18446744073709551615 1 n 125 42 125 43 78 1 ; 125 43 125 44 18446744073709551615 1 i 125 45 125 46 77 2 ++ 125 46 125 48 18446744073709551615 1 ) 125 48 125 49 18446744073709551615 1 { 126 2 126 3 18446744073709551615 7 visited 127 3 127 10 76 1 [ 127 10 127 11 45 1 i 127 11 127 12 77 1 ] 127 12 127 13 45 1 = 127 14 127 15 18 5 false 127 16 127 21 18446744073709551615 1 ; 127 21 127 22 18446744073709551615 1 } 128 2 128 3 18446744073709551615 5 wcout 129 2 129 7 8 2 << 129 8 129 10 10 11 L"start = " 129 11 129 22 18446744073709551615 2 << 129 23 129 25 9 8 subgraph 129 26 129 34 75 1 . 129 34 129 35 18446744073709551615 5 start 129 35 129 40 46 2 << 129 41 129 43 10 11 L", end = " 129 44 129 55 18446744073709551615 2 << 129 56 129 58 9 8 subgraph 129 59 129 67 75 1 . 129 67 129 68 18446744073709551615 3 end 129 68 129 71 70 2 << 130 5 130 7 9 4 endl 130 8 130 12 17 1 ; 130 12 130 13 18446744073709551615 9 DrawGraph 131 2 131 11 20 1 ( 131 11 131 12 20 3 nfa 131 12 131 15 74 1 . 131 15 131 16 18446744073709551615 1 G 131 16 131 17 40 1 , 131 17 131 18 20 8 subgraph 131 19 131 27 75 1 . 131 27 131 28 18446744073709551615 5 start 131 28 131 33 46 1 , 131 33 131 34 20 7 visited 131 35 131 42 76 1 ) 131 42 131 43 20 1 ; 131 43 131 44 18446744073709551615 1 } 132 1 132 2 18446744073709551615 4 void 133 1 133 5 18446744073709551615 5 Test6 133 6 133 11 79 1 ( 133 11 133 12 79 1 ) 133 12 133 13 79 1 { 134 1 134 2 18446744073709551615 5 wcout 135 2 135 7 8 2 << 135 8 135 10 10 7 "test6" 135 11 135 18 18446744073709551615 2 << 135 19 135 21 9 4 endl 135 22 135 26 17 1 ; 135 26 135 27 18446744073709551615 4 auto 137 2 137 6 18446744073709551615 2 re 137 7 137 9 80 1 = 137 10 137 11 18446744073709551615 2 RE 137 12 137 14 0 2 :: 137 14 137 16 81 6 Symbol 137 16 137 22 81 1 ( 137 22 137 23 81 4 L'1' 137 23 137 27 18446744073709551615 1 ) 137 27 137 28 81 1 | 137 29 137 30 82 2 RE 137 31 137 33 0 2 :: 137 33 137 35 81 6 Symbol 137 35 137 41 81 1 ( 137 41 137 42 81 4 L'2' 137 42 137 46 18446744073709551615 1 ) 137 46 137 47 81 1 | 137 48 137 49 82 2 RE 137 50 137 52 0 2 :: 137 52 137 54 81 6 Symbol 137 54 137 60 81 1 ( 137 60 137 61 81 4 L'3' 137 61 137 65 18446744073709551615 1 ) 137 65 137 66 81 1 | 137 67 137 68 82 2 RE 138 6 138 8 0 2 :: 138 8 138 10 81 6 Symbol 138 10 138 16 81 1 ( 138 16 138 17 81 4 L'4' 138 17 138 21 18446744073709551615 1 ) 138 21 138 22 81 1 | 138 23 138 24 82 2 RE 138 25 138 27 0 2 :: 138 27 138 29 81 6 Symbol 138 29 138 35 81 1 ( 138 35 138 36 81 4 L'5' 138 36 138 40 18446744073709551615 1 ) 138 40 138 41 81 1 ; 138 41 138 42 18446744073709551615 3 NFA 139 2 139 5 34 3 nfa 139 6 139 9 83 1 ; 139 9 139 10 18446744073709551615 11 NFASubgraph 140 2 140 13 36 8 subgraph 140 14 140 22 84 1 = 140 23 140 24 18446744073709551615 3 nfa 140 25 140 28 83 1 . 140 28 140 29 38 7 Convert 140 29 140 36 38 1 ( 140 36 140 37 38 2 re 140 37 140 39 80 1 ) 140 39 140 40 38 1 ; 140 40 140 41 18446744073709551615 6 vector 141 2 141 8 5 1 < 141 8 141 9 18446744073709551615 4 bool 141 9 141 13 18446744073709551615 1 > 141 13 141 14 18446744073709551615 7 visited 141 15 141 22 85 1 ( 141 22 141 23 5 3 nfa 141 23 141 26 83 1 . 141 26 141 27 18446744073709551615 1 G 141 27 141 28 40 1 . 141 28 141 29 41 9 NodeCount 141 29 141 38 41 1 ( 141 38 141 39 41 1 ) 141 39 141 40 41 1 ) 141 40 141 41 5 1 ; 141 41 141 42 18446744073709551615 3 for 142 2 142 5 18446744073709551615 1 ( 142 6 142 7 18446744073709551615 3 int 142 7 142 10 18446744073709551615 1 i 142 11 142 12 86 1 = 142 13 142 14 18446744073709551615 1 0 142 15 142 16 18446744073709551615 1 , 142 16 142 17 18446744073709551615 1 n 142 18 142 19 87 1 = 142 20 142 21 18446744073709551615 7 visited 142 22 142 29 85 1 . 142 29 142 30 44 4 size 142 30 142 34 44 1 ( 142 34 142 35 44 1 ) 142 35 142 36 44 1 ; 142 36 142 37 18446744073709551615 1 i 142 38 142 39 86 1 < 142 40 142 41 18446744073709551615 1 n 142 42 142 43 87 1 ; 142 43 142 44 18446744073709551615 1 i 142 45 142 46 86 2 ++ 142 46 142 48 18446744073709551615 1 ) 142 48 142 49 18446744073709551615 1 { 143 2 143 3 18446744073709551615 7 visited 144 3 144 10 85 1 [ 144 10 144 11 45 1 i 144 11 144 12 86 1 ] 144 12 144 13 45 1 = 144 14 144 15 18 5 false 144 16 144 21 18446744073709551615 1 ; 144 21 144 22 18446744073709551615 1 } 145 2 145 3 18446744073709551615 5 wcout 146 2 146 7 8 2 << 146 8 146 10 10 11 L"start = " 146 11 146 22 18446744073709551615 2 << 146 23 146 25 9 8 subgraph 146 26 146 34 84 1 . 146 34 146 35 18446744073709551615 5 start 146 35 146 40 46 2 << 146 41 146 43 10 11 L", end = " 146 44 146 55 18446744073709551615 2 << 146 56 146 58 9 8 subgraph 146 59 146 67 84 1 . 146 67 146 68 18446744073709551615 3 end 146 68 146 71 70 2 << 147 5 147 7 9 4 endl 147 8 147 12 17 1 ; 147 12 147 13 18446744073709551615 9 DrawGraph 148 2 148 11 20 1 ( 148 11 148 12 20 3 nfa 148 12 148 15 83 1 . 148 15 148 16 18446744073709551615 1 G 148 16 148 17 40 1 , 148 17 148 18 20 8 subgraph 148 19 148 27 84 1 . 148 27 148 28 18446744073709551615 5 start 148 28 148 33 46 1 , 148 33 148 34 20 7 visited 148 35 148 42 85 1 ) 148 42 148 43 20 1 ; 148 43 148 44 18446744073709551615 1 } 149 1 149 2 18446744073709551615 0 0 88 0 0 0 22 0 0 1 3 0 2 RE 8 1 3 0 9 ShowGraph 4 1 3 0 8 NFAGraph 10 1 3 0 73 4:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 10 1 3 0 73 4:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 31 1 3 0 10 vector:std 10 1 3 0 73 4:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 21 1 3 0 13 at:vector:std 9 1 3 0 9 wcout:std 21 1 3 0 26 operator:basic_ostream:std 8 1 3 0 12 operator:std 9 1 3 0 74 13:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 21 1 3 0 37 operator*:__normal_iterator:__gnu_cxx 6 1 3 0 12 adj:NFAGraph 9 1 3 0 74 15:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 6 1 3 0 15 pattern:NFAEdge 6 1 3 0 10 to:NFAEdge 8 1 3 0 8 endl:std 21 1 3 0 28 operator=:_Bit_reference:std 9 1 3 0 74 20:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 9 DrawGraph 10 1 3 0 74 26:26:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 10 1 3 0 74 26:33:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 10 1 3 0 74 26:53:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 34:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 36:12:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 6 1 3 0 12 from:NFAEdge 9 1 3 0 74 41:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 5 Test1 36 1 3 0 13 RegularExpPtr 9 1 3 0 74 49:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 15 make_shared:std 4 1 3 0 23 ConcatenationExpression 4 1 3 0 16 SymbolExpression 4 1 3 0 3 NFA 9 1 3 0 73 52:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 4 1 3 0 11 NFASubgraph 9 1 3 0 74 53:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 21 1 3 0 11 Convert:NFA 9 1 3 0 74 54:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 6 1 3 0 5 G:NFA 21 1 3 0 18 NodeCount:NFAGraph 9 1 3 0 74 55:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 55:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 21 1 3 0 15 size:vector:std 21 1 3 0 21 operator[]:vector:std 6 1 3 0 17 start:NFASubgraph 8 1 3 0 5 Test2 9 1 3 0 74 63:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 4 1 3 0 21 AlternationExpression 9 1 3 0 73 70:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 71:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 72:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 73:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 73:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 5 Test3 9 1 3 0 74 81:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 4 1 3 0 20 KleeneStarExpression 9 1 3 0 73 90:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 91:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 92:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 93:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 93:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 5 Test4 9 1 3 0 75 101:16:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 74 106:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 107:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 108:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 109:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 109:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 6 1 3 0 15 end:NFASubgraph 8 1 3 0 5 Test5 9 1 3 0 74 121:7:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 10 Literal:RE 9 1 3 0 74 122:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 123:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 124:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 125:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 125:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 5 Test6 9 1 3 0 74 137:7:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 8 1 3 0 9 Symbol:RE 8 1 3 0 9 operator| 9 1 3 0 74 139:6:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 140:14:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 141:15:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 142:11:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 9 1 3 0 75 142:18:/home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 0 0 4 0 0 0 67 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/NFA.hpp 1528774771 81 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/RegularExpression.hpp 1528779025 68 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.cpp 1528777867 68 /home/jasonhe/Documents/MyCode/CPP/JuCi++/RegularExpression/Test.hpp 1528777788